{{#section 'head'}}
    <script src="/js/rx.min.js"></script>
{{/section}}

<div class="ui container">
    <div class="ui icon input search">
        <input class="search" type="text" placeholder="Search In GitHub ......">
        <i class="inverted circular search link icon"></i>
    </div>
</div>

<div id="main" class="main" style="width: 600px; height: 400px;"></div>

{{#section 'core'}}
    <script type="text/javascript">
        $(() => {
            const $container = $('#container');
            const $input = $('.search');

            const observable = Rx.Observable.fromEvent($input, 'keyup')
                    .debounceTime(400)
                    .map(() => $input.val().trim())
                    .filter((text) => !!text)
                    // 只取不一样的值进行异步
                    .distinctUntilChanged()
                    .do(value => {
                        console.log(value);
                    })
                    .switchMap(value => {
                        return [];
                    });


            observable.subscribe((data) => {
            }, (err) => {
                throw err;
            });
        });
    </script>
    <script type="text/javascript">
        var myChart = echarts.init(document.getElementById('main'));

        myChart.showLoading();
        var webkitDep = {
            "type": "force",
            "categories": [//关系网类别，可以写多组
                {
                    "name": "人物关系",//关系网名称
                    "keyword": {},
                    "base": "人物关系"
                }
            ],
            "nodes": [//展示的节点
                {
                    "name": "刘烨",//节点名称
                    "value": 3,
                    "category": 0,//与关系网类别索引对应，此处只有一个关系网所以这里写0
                    "color": "#B5C334"
                },
                {
                    "name": "霓娜",
                    "value": 1,
                    "category": 0,
                    "color": "#FCCE10"
                },
                {
                    "name": "诺一",
                    "value": 1,
                    "category": 1,
                    "symbolSize": 20, //控制节点大小
                    "color": '#D7504B'
                }
            ],
            "links": [//节点之间连接
                {
                    "source": 0,//起始节点，0表示第一个节点
                    "target": 1 //目标节点，1表示与索引为1的节点进行连接
                },
                {
                    "source": 0,
                    "target": 2
                }
            ]
        };
        myChart.hideLoading();

        option = {
            legend: {
                data: ['人物关系']//此处的数据必须和关系网类别中name相对应
            },
            animationDuration: 1500,
            animationEasingUpdate: 'quinticInOut',
            series: [{
                type: 'graph',
                layout: 'force',
                animation: false,
                label: {
                    normal: {
                        show: false,
                        position: 'right'
                    }
                },
                roam: true,
                draggable: true,
                data: webkitDep.nodes.map(function (node, idx) {
                    node.id = idx;
                    return node;
                }),
                categories: webkitDep.categories,
                force: {
                    edgeLength: 200,//连线的长度
                    repulsion: 100  //子节点之间的间距
                },
                edges: webkitDep.links,
                lineStyle: {
                    normal: {
                        color: 'source',
                        curveness: 0.2
                    }
                },
                itemStyle: {
                    normal: {
                        color: function (series) {
                            return series.data.color; // 控制颜色
                        }
                    }
                }
            }]
        };
        myChart.setOption(option);
    </script>
{{/section}}